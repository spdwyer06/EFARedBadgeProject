@model GS_Models.ThreadViewModels.ThreadEdit

@{
    ViewBag.Title = "Edit";
}

<h2 class="labelText">Edit</h2>
<h4>"@Model.ThreadTitle"</h4>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ThreadID)

        <div class="form-group">
            @Html.LabelFor(model => model.ThreadTitle, htmlAttributes: new { @class = "control-label col-md-2 labelText" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ThreadTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ThreadTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ThreadDescription, htmlAttributes: new { @class = "control-label col-md-2 labelText" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ThreadDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ThreadDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="button btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "actionLinkText" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model GS_Models.GameViewModels.GameCreate

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <br />
    <h2 class="labelText">Add a game to the database</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.GameTitle, htmlAttributes: new { @class = "control-label col-md-2 labelText" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GameTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GameTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PlatformType, htmlAttributes: new { @class = "control-label col-md-2 labelText" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.PlatformType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PlatformType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryType, htmlAttributes: new { @class = "control-label col-md-2 labelText" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.CategoryType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RatingType, htmlAttributes: new { @class = "control-label col-md-2 labelText" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.RatingType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RatingType, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default button" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index",null,new { @class = "actionLinkText" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
